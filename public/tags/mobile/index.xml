<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mobile on CookieHookey</title><link>https://cookiehookey.neocities.org/tags/mobile/</link><description>Recent content in Mobile on CookieHookey</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 26 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cookiehookey.neocities.org/tags/mobile/index.xml" rel="self" type="application/rss+xml"/><item><title>my050番号の失効に注意</title><link>https://cookiehookey.neocities.org/careful-not-to-lose-my050-number/</link><pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/careful-not-to-lose-my050-number/</guid><description>brastelのmy050は､有料化され､新規申し込みには本人確認書類が必要になった｡ 私はsmatalkを利用していたことがあるが､気が付かず自動解約されたことがある｡brastelを利用している方はご注意を｡
利用規約によると､旧プラン(番号維持費無料)の場合､チャージや有料通話等が1年間ない態が続くとmy050が解約になる｡利用すると都度1年間延長される｡
つまり､最後の利用日から1年以内に､利用していればいいということだろう｡ 本人確認については､契約時に行うことを求めてるため､遡って必須になるわけではないようだ｡</description></item><item><title>Androidのプライバシー対策</title><link>https://cookiehookey.neocities.org/android-hardening-idea/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/android-hardening-idea/</guid><description>別記事で､Pinephone､Librem5といった端末をモバイルデバイスの選択肢として挙げたが､既に大勢が持っているAndroidデバイスで利用することも検討してみたい｡Torのブログで､そうした試みがあるため､参考にしている(🔗)､(🔗)｡ 恐らく､OSのバージョンにより､違いががある｡
不要なコンポーネントを取り除く スマホにあるセンサー､コンポーネントは大体以下の通り｡対策の考察については､torのコメントが参考になる｡
マイク baseband カメラ 加速度計（加速度センサー） ジャイロスコープ（ジャイロセンサー） 磁気センサー GPS 生体認証センサー(指紋) 近接センサー 環境光センサー Wifi Bluetooth NFC ソフトウェア的に電源を落とすだけで機能が完全にOFFになるわけではなく､かと言ってバッテリーを簡単に取れるわけでもない｡そのため､不要なコンポーネント･センサーは物理的に除外し､適宜外部化(ルーター､マイクetc)する｡baseband含めた無線関連は､位置情報を使用できなくなる可能性があるので､よく検討すること｡使う可能性のあるセンサー･コンポーネントは､テープで塞いだり(カメラ)､ファラデーケージ(電波系)を利用することで物理的に対処できる｡
キルスイッチや､isolationの確認ができるならば､ハードウェア改造の必要性は下がるが､Androidスマホにキルスイッチはないしだろうし､modemからのisolationが確約されたデバイスは少ない｡basebandを含まないとされるWifiのタブレット等を使うのもあり｡センサーが少ないdumbphoneでもマイクは意図せず動作しうるので(🔗)､スマホ同様に対処する｡
分解方法は､&amp;ldquo;機種名&amp;rdquo;+&amp;ldquo;teardown&amp;quot;とか&amp;quot;repair&amp;quot;といったキーワードで検索すれば､動画が出てくる｡ifixitで､コンポーネントが大体わかるので､不要なものは取り外す｡ 下記のようにマイクはきれいに取れなくても､問題なく使えなくなる｡通話時はイヤホンマイクを差し込むことで対応する｡ 不要なファームウェアの削除 前章のように物理的に取り除くことに加えて､ファームウェアの削除での対処もする｡
私の場合マイク同様に､RF関連のコンポーネントを物理的に取り外そうとしたが､できなかった｡LTEのカバーは簡単に外せたが､GSMの方はカバー自体が固くて取り外せなかった｡そのため､TWRPのCLIでmodemのファームウェア削除で対処を試みた｡ちなみに､firmwareを削除すると､コンポーネント自身で電源を落とせないので､電力消費は多くなるかも?
# バックアップ cd /dev/block/platform/.../by-name #｢...｣の部分は機種による｡ dd if=./modem of=/sdcard/modem #拡張子.imgはなくてもよさそう｡ # 復元するとき dd if=/sdcard/modem of=./modem # 削除 dd if=/dev/zero of=./modem modemの削除がうまく行くと､&amp;ldquo;Settings&amp;rdquo; -&amp;gt; &amp;ldquo;About phone&amp;rdquo; が &amp;ldquo;Baseband version: Unknown&amp;quot;になるらしいが､私の場合は､TWRP上のCLIで削除した段階で､システムが起動しなくなった｡
システム マーケティングのためなのかパッケージ化されたOSは､プライバシー上問題があるアプリをデフォルトで含んでたりするため､カスタムROMを利用する｡ReplicantとかGrapheneOSとか｡
FDEやFBEが有効かとか､一通りSettingsはチェックすること｡
利用方針 サービス利用時には､OPSEC的なところを重視する｡冒頭のテーマ･方針として触れた部分である｡必要最小限で構成し､それを必要なときだけ利用するなど｡
ネットの接続方法 パケット交換方式でのみ通信を許可するために､機内モードにし､modemを外部化する｡モバイルルータ(FLOSSが望ましい)で電波を受信し､それをスマホにつなげる｡スマホとモバイルルーター間の接続方法は無線ではなく有線(LAN)のほうが望ましいが､Wifiであればbasebandよりはマシだと思っている｡通信はSSLで暗号化されるように注意する｡
スマホが複数台ある場合､1台をルーターとして使用することはありだが､スマホ(ルーター)自体が多機能で､センサーや高精度なGPSを備えている点は考慮したい｡
Wifiトラッキングの対処 Wifiを利用したトラッキングについては別記事で触れた｡
モバイルルーター側では､SSIDを設定する際に､下記のように設定することで､SSIDのデータベースからoptoutできる(🔗)｡ &amp;lt;SSID&amp;gt;_optout_nomap
スマホ側では､Wifiは他の機能同様デフォルトOFFで､必要なときだけONにする｡それを助ける意味で､指定したWifiを受信しなくなったらWifiを自動でOFFにする機能がある(🔗)｡この機能により､自宅でWifiを使用している場合､外出時にスマホのWifi受信を自動でOFFに切り替えることができる｡ LineageOSベースのOSだけかもしれないが､
Settings-&amp;gt;System-&amp;gt;System profilesへ進む 使用するprofileを選び(defaultとか)､設定画面に進む｡ &amp;ldquo;Triggers which will activate this profile&amp;quot;をWifi自動OFFに紐付けたいSSIDに設定｡ &amp;ldquo;Wi-Fi&amp;quot;という項目を&amp;quot;Turn off&amp;quot;にする｡ その他のアンカーは､好みがなければ､&amp;ldquo;Leave unchanged&amp;quot;にする｡ MACアドレスのランダム化の機能･設定･アプリがあれば､補助的に使うのはあり｡</description></item><item><title>スマホとプライバシー2(対処の検討)</title><link>https://cookiehookey.neocities.org/smartphone-and-privacy2/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/smartphone-and-privacy2/</guid><description>以前､スマホとプライバシーについて触れた｡ ここでは､モバイルデバイス上で､プライバシーを重視するにはどうするか､デバイスを長く使うにはどうするか､という2つの方向で考えていく｡
ただ､この方法で対応しましょうとは中々言えない｡症状に対して､｢はい､このお薬飲みましょう｣となっても､それが別の症状を生み出すようなことも考えられる｡全体的な整合性のためには､セキュリティ等の専門的な知見が必要となり､いちユーザーの手には余る｡この先は､考え方のひとつとして捉えていただきたい｡
Introduction セキュリティやプライバシーというものが信頼で成り立つものならば､今日のスマホはそれに値しない｡なぜならば､ファームウェアからアプリまで透明性がないからだ｡クローズドソースでありバイナリBLOBを含む｡オープンソースでない限り､プライバシーがどう尊重されているか確かめようがない｡その時点で､スマホに対する信頼は限定的になる｡しかし､スマホというデバイスを筆頭に､既に普及し､利用する習慣を以て疑いの念は消え去っているように思える｡
デバイスを含めたフリーウェア化というのは､プライバシーを重視するためにも､長く使用するためにも大前提であるが､それが達成できてない｡本来は､プライバシーにまつわる議論をする前段階にフリーウェア化が来るべきで､その後初めてプライバシーを重視するには?という議論がされなければ意味がない｡この事から､今日のテクノロジーはプライバシーについて語る段階にはなく､これから考える対応策は結局の所､迂回策や妥協策に過ぎない｡
テーマ･方針 基本的な方針を定めておく｡
FLOSS Isolation: 例)センサー･コンポーネントの外部化､モデムの隔離 Opt-in: 例)必要最小限のセンサー･コンポーネント･サービス､デフォルトOFFで必要な時だけON Decentralization Offline: わざわざクラウドを使わないとか Fewer accounts: データの蓄積場所を指定していることになるので Less technology: 機密にしたい情報は保存しないとか OPSEC: 道具に依存するより使い方を工夫する｡ Mass surveillanceにフォーカス(&amp;lt;=&amp;gt;Targeted surveillance) ハードウェア･OSの選定 ハードウェアの選定にあたって プライバシー上の対策をするとともに､長く使うことを考えるにあたって障壁がある｡別記事で触れているが､ハードウェアがクローズドソースであることが障壁になる｡何故なら､最新の状態でもDMAを悪用される可能性があることに加え､セキュリティ更新を2･3年でやめるというベンダーの気まぐれを受け入れるしかないからだ｡以下､DMAについて｡
DMAは､ハードウェアのコンポーネントや周辺機器が､OSとは別に直接メモリにアクセスできるようにした仕組みであり､DMAでない場合CPUがメモリのアクセスまで管理するため､動作が遅くなるか､機能しない｡そのためDMA自体は､有効な仕組みと言えるが､特にクローズドなファームウェアにアクセスされた場合､encryption keyを取られるなどの危険性がある｡
それゆえに､カスタムROM等でシステムレベルをフリーにしても､ローレベルがクローズドのままであればプライバシー上の懸念は残る｡同様に､ベンダーが更新をやめた後にシステムレベルのセキュリティパッチを当てたところで限定的なため､セキュリティの観点から､やはり長く使えない｡
一番リスクがあるのは遠隔でいつでもどこでもアクセスし得るという点､規制の影響を受ける点でbasebandだと考えられる｡DMAの対応策はいくつか挙げられるが､一番効果的な手段は､スマホを一切使用しないことだ｡それ以外では大きく分けて2つの解決方針がある｡
理想的:フリーソフトウェア化を目指す DMAの解決策の1つは理想的な方法で､オープンソースのハードウェア(コンポーネント､ファームウェア)で構成することだ｡オープンソースは万能作ではないが､少なくともコードの確認ができる｡セキュリティ更新に関しては､メーカーのペースではなくコミュニティのペースでアップデートが可能なため､長く使用することができる｡3つの行程があり得る｡
1つ目は､オープンソースにするように法律改正する方法｡ただ､FCCやCE(日本で言う技適マーク)など無線に関しては当局がレギュレーションしており､認証を受けるためには結果的にBLOBを含む必要があるようだ｡オープンソース化は､起こりそうにない｡
2つ目は､オープンソースにするようメーカーに対応させる方法｡ハードウェア業界は､少数の巨大半導体メーカー(Mediatek, Qualcommなど)が牛耳っているため､競争がなく､パテントで守られている｡積極的にフリーウェアを導入する理由がないため､業界側からの変革は期待できそうにない｡
3つ目は､バイナリを分析し､パッチを当てる方法｡すべて透明性をもてるまで､何年かかろうともハッキングし､オープンソースのファームウェアを作る｡しかし､オープンソースのコミュニティーは､スキルは集まるが､マンパワーが足りない事が多く､時間がかかる｡フリーウェア化の道としては一番あり得そうだが､多大な労力を必要とする｡仮にバイナリを理解し､代替するファームウェアを用意できたとしても､最近のスマホは署名が付いたファームウェアしか受け付けないので､入れ替えることができない(🔗)､(🔗)｡
現実案･妥協案:Isolation DMA解決策の2つ目は､Isolationであり､現実的な妥協策と言える｡クローズドソースを隔離しCPUやメモリと言ったchipにアクセスできないようにすることだ｡ところがIsolationを確約するデバイスは少ない｡例えば､SMMU(IOMMU)を手段として挙げられるが､デフォルトでDMA対策をするわけではなく､システム側でどう管理するかが重要なる｡また､Boot時が弱点にもなるため､IOMMUがModemよりも前に起動する必要があるが､そのためにはBootloaderも同時にフリーであることが必須だ｡つまり､フリーのBootloaderとIOMMUが前提となる｡加えて､IOMMUのドキュメントがあること､コードのペアレビュー､ModemがIOMMUを書き換えないという確約ができれば良い｡ただIOMMUにはIOMMUなりの脆弱性もあるようだ(🔗)｡ 別のIsolationの手段としては､RAMではなくUSBを通じてmodemと通信する方法がある(🔗)､(🔗)｡
IOMMUで､メモリに関しては守ることができたとしても､メモリ以外の部分に関しての動作を制御できるのかはわからない｡例えば､他のコンポーネント(GPS､マイク､カメラ等)ヘのアクセス､勝手な通信など｡フリーであるに越したことはないので､妥協策となるが､現実的対応策である｡
OS･デバイスの選定 アプリ､OS､デバイスあたりは密接に紐付けされており､ゼロから選ぶ場合､デバイスを選択する前に､どのOSを使用するか検討することになる｡例えば､Androidアプリを使いたいならば､基本的にAndroid系のOSを選ぶ必要がある｡しかし､AndroidはOpen-sourceというより､Shared-sourceであり設計等においてGoogleの影響を大きく受けるし､Androidにしかない企業のアプリは､ほぼクローズドソースである｡カスタムROMであっても､それらは変わらないため､LinuxOS(Linux-based,Linux Phone)を選択する｡LinuxOSの場合､AnboxとかWaydroidで､Androidアプリを利用できる可能性はあるが､不明｡Mobian､PostmarketOS､Maemo LesteなどがLinuxOSとして挙げられる｡
OSが決まれば､対応デバイスは限られるので､デバイスも決まる｡選択したOSの対応デバイスを調べるのだが､LinuxOSの場合､大体Librem5とかPinephoneあたりが中心点になると思う｡両デバイスともに､キルスイッチが付いているが､Librem5にはセンサーの物理的なキルスイッチがある一方で､Pinephoneにはない｡ただ､キルスイッチがあっても､クローズドである限り､スイッチON時の動作は不明である｡特にモデムはBLOBを含むが､適宜､自分でファームウェアを入れ替えてもいい｡
アプリにこだわるなら Androidのアプリを使いたい場合､Androidである必要がある｡｢いつでもどこでも｣でなければ､PCでVMでもいい｡この場合､自宅等でVMでAndroidアプリを使用し､モバイルデバイスではLinuxOSを選ぶという方法を取れる｡より軽量のAnboxやWaydroidといった方法もあるが､モバイルとアーキテクチャが違うため､アプリが対応していない可能性がある｡
Androidアプリを持ち歩きたいならば､フリーウェア化の側面ではReplicantが選択肢に入るが､対応デバイスが古いのか､中古市場でも見つけられない｡フリーウェア化とは行かないが､firmwareを含めたセキュリティに注力しているGrapheneOSが良さそうだ｡
GrapheneOSでは､カーネルにあるオープンなドライバーが許可した場合にだけ､ホストのメモリにアクセスできる｡IOMMUにより､メモリはIsolationはできているようだ(🔗)､(🔗)｡ 対応デバイスをGoogle Pixelにしているので､他デバイスより融通が利くメリットはあるが､端末が6万円くらい?と高いし､3年くらいで買い換えるために費用がかさむ｡
ユーザーはLinuxOSを選べない ユーザーは､アプリを重視してOSを選択することになる｡ゲームのコンソールと同じ様な感じで､このソフトはこのコンソールでのみ使えますとか､新しいソフトは上位機種でなきゃ発売しませんよ､というだけでみんな買い換えることになる｡アプリ(ソフト)をコントロールすると､ハードウェア(コンソール)もコントロールできるということだ｡
大衆を狙うのであれば､おそらく決済系､銀行系のアプリやGAFAMなど人気なアプリを充実させる必要があるが､企業はクローズド好むので､わざわざLinuxOSでアプリを公開しない｡結果Androidを多くのユーザーは使うことになり､Linux OSには移動できない｡Windows Phoneの時と同じように､利用者を増やすことは難しいだろう｡ユーザーは､企業のアプリに依存しているため､寡占されたデバイスから離れられない｡アプリをコントロールされることで､多くのユーザーはオープンソースのデバイス､OSを選べないようになっている｡
利用方針 デバイス選定後の話｡
LinuxOSの場合 通信はすべてIP上で､SSLで暗号化し､Tor等を通じて行う｡ 適宜センサー･コンポーネントを外部化する PSTNの電話網は､ブリッジのあるSIPプロバイダーを利用する｡ など趣味嗜好に合わせて､工夫する｡
Android OSの場合 Androidのプライバシー対策を参照｡</description></item><item><title>スマホとプライバシー1(問題の所在)</title><link>https://cookiehookey.neocities.org/smartphone-and-privacy/</link><pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/smartphone-and-privacy/</guid><description>スマホには脆弱性があり､そ1れがプライバシー上の懸念事項となる｡スマホに脆弱性があることは､今までに何回か触れた｡ファームウェアがクローズドソースであることや､ 電話回線のSS7という通信プロトコル だったり､ やたらとBluetoothをONにするOS など｡今回は､それら脆弱性をスマホのプライバシーという文脈で整理しようと思う｡
まず第1章で､プライバシーの定義について考え､続く第2章で､スマホとプライバシーの関係性･イメージついて掴めるようにする(ほぼリンク)｡第3章では､なぜスマホが問題になるかについて説明する｡第4章は､第5章の前提知識として､スマホの構造について軽く触れる｡第5章がメインで､脆弱性を階層ごとに列挙している｡第6章はまとめというかコメントだ｡
今後､文章中の参照リンクは､適宜｢🔗｣で表記する｡
プライバシーとはなにか 別ページ参照
スマホとプライバシーって? プライバシー自体については､何となくイメージができただろう｡しかし､スマホとプライバシーの関連性は?というと､いまいちピンとこないかもしれない｡その場合には､以下のサイトが参考になる｡概要と言うには少し長いが､包括的に触れているサイトだ｡この先こうした情報源を参照しつつ考えていくので､今すぐ見る必要はない｡ただ､最初の動画はイメージを掴むには役立つと思う｡
【動画】概要:デバイス上で操作できることは遠隔でも操作できる｡ スマホの脆弱性について(項目別に時系列で紹介) スマホと､それを取り巻く業界まで含めた､脆弱性に関する論文 スマホのハードウェアや仕組みに関する脆弱性 なぜスマホが問題になるのか コンピューターという点では､LaptopやDesktopも同様に脆弱性にはさらされているはず｡では､なぜスマホを焦点に当てるのか? それは､スマホがとりわけSensitiveだからだ｡なぜか｡理由はスマホの特性とスマホのユーザー層にある｡
スマホの特性 以下のような特徴から､DesktopやLaptop､単純な家電製品とも違うスマホ独特のプライバシー上の懸念が生じる｡
インターフェイスの違い 機能が豊富で､センサーが多種多様である｡そのおかげで､現在地を正確に把握できたり､指紋でロック解除できたり｡画面をタップで操作することができたりする｡外部機器を用意しないでもビデオ通話ができたりする一方で､センサーが一緒になっているので取り外せない｡
常に持ち歩く スマホの多機能さと持ち運び易さが相まって､常に持ち歩く｡必要性がなくても､外出する際に忘れたら､わざわざ家に取りに帰る｡異世界に転生してもなお､持ち歩く人がいるらしい｡Laptopも持ち運べるが､スマホほどの携帯性はない｡
常に電源を入れている Desktop, Laptopでも､特にサーバーであれば常に電源が入っているだろう｡スマホは連絡ツールとして機能することもあり､大抵の場合､常に電源は入っているし､それがcommon senseとなっている｡センサーが豊富で､常に持ち歩き､常に電源が入っている｡仮に､それを管理する方法を知らない(orない)としたら? 危ういだろう｡
収益モデルの違い スマホの収益モデルは､従来のデバイスとはアプローチが異なる｡ハードウェアや､ソフトウェア､サービスを販売して対価を得る仕組みとは違って広告を収益モデルとしていることが多い｡これまでに述べたスマホの特性と､それ以外の要素も含め､トラッキングにはうってつけのデバイスとなっている｡特にターゲティング広告を行っている業者にはスマホは人気で､ユーザーの情報が第2の通貨として機能している｡大抵の場合､利用者は､いつのまにかトラッキングに同意している｡
こうした背景も相まって､スマホ業界はCash cow(儲かるビジネス)となり､PCや電化製品よりも開発が活発に行われている｡これからも､スマホとそれを取り巻く環境は､プライバシー的な懸念は今まで通り二の次にして､急速な変化を遂げていくだろう｡
スマホのユーザー層 今までのコンピューターには比類しないほど､スマホはトラッキングには最適と言える｡一方で､スマホ利用者の大半は､コンピューターについての知識や仕組みに対しての理解が不足してるように感じる｡DesktopやLaptopを経由してスマホを利用している人は､ある程度知識があるかもしれないが､特にいきなりスマホから入った人はデジタルリテラシーに不足するところがあるだろう｡極端に言えば､守る術を知らない人が､トラッキングツールを持っているようなものだ｡危うい｡これが､(デジタル)プライバシーを語る上で､スマホに焦点を当てる理由だ｡
表にまとめてみると(イメージ) センサー 持ち運び 常時電源 広告収益 リテラシー不足 電化製品 - ? - - - Desktop - - - ? ? Laptop - ? - ? ? スマホ ✔ ✔ ✔ ✔ ✔ Legend: - : なし(ほぼなし) ? : 物や使い方によるところが大きい ✔ : 大いに当てはまる スマホの構造･階層 前章で､スマホを取り上げる理由は説明したが､そのスマホの脆弱性を語るには､仕組みの理解していた方がわかりやすい｡ここでは､スマホがどの様な構造で成り立っているかというところについて､一応触れておく｡</description></item><item><title>プライバシーとは何か</title><link>https://cookiehookey.neocities.org/the-definition-of-privacy/</link><pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/the-definition-of-privacy/</guid><description>プライバシーが必要なのは､隠すものがある場合だけ? こういう話題では､Nothing to hide議論 というものがある｡隠すものがないのだったら､プライバシーなんていらないだろうとか､組織的な監視システムを気にする必要なんてない､というような内容だ｡コントロールを維持･強化したい立場であれば､必然的にそうした主張を推し進めるだろう｡そうした立場を持たないならば､最終的には人によりけりかなとは思う｡ただ､テクノロジーに関連する(デジタル)プライバシーというのは､多少なりとも知識がないとプライバシーが侵されているという実感は持てないだろう｡つまり､大抵はいつの間にか侵されているものということだ｡
プライバシーは､自然な感覚である 冬に羽織るブランケット プライバシーと聞いて思い浮かぶのは､Mission: Impossible (1996)のMaxという武器商人の言葉だ｡
I don&amp;rsquo;t have to tell you what a comfort anonymity can be in my profession &amp;ndash; like a warm blanket.
冬の寒い時期に羽織るブランケット｡なくても過ごせるかも知れないが､あった方が安心だし､快適だろう?1
日常生活の一部 横断歩道を渡るときに､安全のため信号を確認することは普通だ｡青だからすぐ行こうという人もいるだろうし､さらに左右を確認してから渡る人もいるだろう｡それぐらい自然な反応だと思う｡Nothing to hideの人も､服を着るだろうし､家に鍵をかけるだろうし､自分の考えを何でもかんでも発しているわけではないだろう｡プライバシーもそれと同じくらいの感覚だ｡
プライバシーとは 自分のコントロールが及ぶ範囲を私的空間､コントロールが及ばない範囲を公的空間とする｡前者の管理者は一人称や二人称､つまりIやWe｡後者の管理者は､三人称､つまりThey(She､He)で自分にはコントロール権限がない｡私的空間と公的空間を意図したとおりに棲み分けできている時､プライバシーは守られていると言える｡一方で､意図せず情報が公的空間に流出した場合､プライバシーが侵されているとなる2｡
公的空間から私的空間への一方向の時代から､ネットが普及したことで双方向に簡単にアクセスできるようになった｡さらに時代は進み､スマホの登場により､ネット環境を簡単に持ち歩けるようになった｡つまり､スマホが私的空間と公的空間の媒介者となり､私的空間と公的空間が｢いつでもどこでも｣｢簡単｣に入り交じり､結果､棲み分けが難しくなっていると思う｡言い換えると､簡単にプライバシーは侵され得る環境だと言える｡というのは､私的空間だと思っていたものが､いつの間にか公的空間と繋がっているということがテクノロジーでは起こり得るからだ｡
プライバシーとテクノロジー(デジタル) 数字の意味 数字とはもともと､管理するために生み出されたものだと思っている｡時間やお金も数字だ｡正の側面が最初の動機だとしても､副次的な負の側面は生じる｡大抵は管理する側は正の側面を享受し､管理される側は負の側面を被る3｡ コンピュータはデジタルであり､つまり数字化していることになる｡例えば､家計簿はデジタル化した方が､計算も把握も簡単にでき便利だろう? 今は便利を合言葉にデジタル化が進められているが､自分たちがマスター管理者出ない限り､結果的に､利用され管理されるているのが落ちとなる｡管理とは把握することであるため､プライバシー上の懸念が生じる｡
デジタル化により活力を奪う 度々指摘されることではあるが､ありとあらゆる方法で､スマホ等から､合法的に､情報･データが取られている｡それらのデータは､私達の一部であるということを意識しなければいけない｡過去､現在を収集し､パターン化し分析することで､未来までのデータを集めることができる｡さらには､私達が受け取れる情報を操作することで､私達自身も操作され得る｡SNSや検索エンジンのセンサーシップは有名だ｡要するに､彼ら(企業とか)が集め､収集しているのは､単なるデータではなく､私達自身であるということだ｡彼らが操作しているのは情報ではなく､私達自身であるということだ｡過去､現在､未来､私達自身(アイデンティティ)｡そして最終的には､私達の自由や活力を奪っていることになる｡
プライバシーを重視することは､全体の貢献に繋がる 大勢がNothing to hideだとしても､プライバシーを重視することは､全体の貢献に繋がる｡他人事ではない｡隠すものがなければ､surveillanceは気にする必要はないという考えは､ある意味では､独りよがりな考えである｡
自動運転が保険会社と情報共有される｡ナビに出た給油指示に従わないと､ロードサービスを受けられませんとなるかも知れない｡自分に決定権がないような状況も起こり得る｡また､誤判断だったとしても､商品を高く売られたり､または売ってくれなくなるかもしれない(保険とか)｡逆に､本当はいらない商品を勧めて来るかも知れない｡気づかないうちに､私達の嗜好性や行動はコントロールされうる｡
国や政治体制でも大きく変わるかも知れないが､この世界には世界や全体の利益のために重要な情報を明らかにする人たちがいる｡例えば､政治の腐敗を明らかにしようとするジャーナリストやその情報源､内部告発者だ｡そうした人たちがいない場合､世界はどんどんおかしな方向に進んでいくのかも知れない｡公正に見せかけた不正｡歪曲された真実｡隠すものがないと主張する人もその報いを受けている､もしくは受けることになるだろう?より良い世界のために事実を明らかにしようとする行動の代償が､人の命であってはならないと思う｡自分がsurveillance影響を受けていることに気が付かないだけで､プライバシーやセキュリティに対する考え自体を否定してはいけない｡ジャーナリスト以外にも､医者や弁護士も秘密を守るべき立場にあるが､プライバシーを軽視していては､秘密を守りたくても守れない状況になりうる｡
デジタル化･テクノロジー化･オンライン化を推し進めるだけではなく､その背後について回る負の側面についても､目を向ける必要がある｡プライバシーは私達(政府に対する国民､企業に対するユーザー)の防衛線であり､パワーの源になる4､5｡プライバシーを重視するという雰囲気･士気を高めるだけでも､全体の貢献に繋がるはずだ｡
blanketはcloak的な意味合いもあるかな｡&amp;#160;&amp;#x21a9;&amp;#xfe0e;
近接概念に､セキュリティがあるが､セキュリティはバイナリーである一方､プライバシーにはグラデーションがあると思う｡例えば､セキュリティは｢どう守るか(how)｣という技術的な領域であるが､プライバシーは｢何を守るか(what)｣という政治的な部分まで含む｡政治的であるがゆえに､ユーザーと企業･政府等の組織との立場の違いによる議論が巻き起こる｡言うなれば､ユーザーの情報をユーザーは守りたいが､企業･政府はユーザーの情報を目的のために利用したいとか｡&amp;#160;&amp;#x21a9;&amp;#xfe0e;
問題は自分達は管理者なのか､管理される側なのかだが､管理する側であってもヒエラルキーの性質上､大抵更に上に管理者がいるだろう｡マスター管理者にはなれない｡そもそも､人に対してやたらと数字を当てはめるべきではないと思う｡数字はものに対して当てはめるべきだ(測量､建築､物理とか)｡&amp;#160;&amp;#x21a9;&amp;#xfe0e;
不正の源にもなるというような視点も､政府側からはあるだろう｡ただ､そうした議論は､デジタル化推進と同じ熱量･決定権を与えてなされているのかな? ところで､ここでのポイントとしては､政治的にどうするべきとかではなく､ユーザー側のプライバシーへの気運を高めたいという点にある｡そうすることで､デジタル化によって起こる負の側面等にも目を向けられるようになる｡問題は､知らず知らずのうちにリスクを受け入れていたということがないようにしたいということだ｡&amp;#160;&amp;#x21a9;&amp;#xfe0e;
なぜプライバシーがパワーの源泉になるかは､アナロジーを用いて説明してみる｡風船が形を保つには､圧力(内部と外部)が必要だ｡そのためには､風船の膜(境界)が機能していることが前提にあるが､膜に針を刺すことでその機能は失われ､圧力は逃げ､風船は形を保てなくなる｡この場合､風船は私達のアイデンティティであり､圧力は私達のパワーやエネルギーである｡その前提となる風船の境界(膜)は､私的空間と公的空間の区分するプライバシーを指す｡プライバシーが侵されることで､私達のパワーは逃げていき､私達のアイデンティティは失われる｡私達が私達ではなくなり､全体に均質化される｡別のアナロジーとしては､｢密教がなぜ力を持つか｣でも説明できるかもしれない｡&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>なぜ新しいスマホを購入しなければいけないのか</title><link>https://cookiehookey.neocities.org/why-do-we-have-to-buy-a-new-phone/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/why-do-we-have-to-buy-a-new-phone/</guid><description>経済的な人間ならば､なぜ定期的に新しいスマホを購入しなければいけないか考えたことがあるだろう｡
今持っているスマホを使うことをやめて｡なぜ? スマホの所有期間は2~3年位だというのが相場ではないだろうか｡なぜ? この疑問に対する答えは､シンプルだ｡でもそのシンプルな答えに付随する問題は幅広く､根深い｡
スマホを定期的に購入しなければいけない理由 はじめに明言しておくと､我々はスマホビジネスのお客さんなのだ｡それに尽きる｡
まず､買い替える理由を考えてみる プル要因
新しい方が､デザインや機能が魅力的 プッシュ要因
停波により､通信できなくなった(デバイス外の要因) 物理的に壊れた(物理的なハードウェア) セキュリティが更新されなくなった(ソフトウェア) 新しいスマホに魅力を感じたというのは､&amp;ldquo;なぜ?&amp;ldquo;とわざわざ考えるケースではない｡停波は､10年以上の単位だろう｡だから､なぜ買い換えなければいけないかという命題に対しては､いささか仕方なさが目立つ｡我々が買い換える理由は､大抵の場合停波が原因ではない｡
物理的に壊れた 今回の主題ではないが､あえて修理しずらくされている点はあるだろう｡いつしかスマホはカバーを外せなくなった｡ネジも特殊なものが使用されていたりするし､修理店をするにも特別な許可と手数料を払う必要が出てきたりする｡バッテリー交換をすることさえ難しい｡もちろん正当な理由として､防水･防塵のためとかあるだろうが､対応していないデバイスであっても､密閉･密集･密接している｡だから､壊れたら買い換えないといけない｡直すなら専門店でなければいけない｡いずれも､ベンダーにマージンは還元される｡購入後にもハードウェアを理由にビジネスのネタにできる｡我々はお客さんだから｡
セキュリティの更新がされなくなった 更新されなくなっても気にせず使う人はいるだろう｡通信とは双方向であるがゆえに､片方がセキュリティを気にしているだけではあまり意味がない｡双方の信頼性が担保されて初めて､安心して使えるからだ｡つまり､セキュリティ更新されなくなるという事象は､更新されないデバイスだけの一部の問題ではなく､全体のセキュリティにまで波及しうる｡次のパートでセキュリティの更新については深掘る｡
なぜセキュリティが更新されなくなるのか 理由は､ベンダーがそう決めたから｡更新しないと決めたからである｡
ベンダーやメーカーは新しいデバイスを購入してほしい えっ､全然スマホまだ使えるのに､なんで更新してくれないの?と思うだろう｡それはもっともだ｡でも､更新しないと言ったら､更新しないで済ませられるのが現状だ｡大抵は､数回は更新しますとか､Stock ROM1であれば3年は更新するよとなっているが､その先は更新しないのだ｡EOLになったデバイスを積極的にサポートするベンダーはいない｡仮に脆弱性が見つかったとしても､買い替えて下さいの一言で済む｡
本当なら､更新も1回ぐらいで済ませて､後は新しいスマホ買ってねと言いたいのだろうが､ユーザーが反発するだろう｡とりあえず2~3年で落ち着いている｡
あえて更新した上で購入を促す方法もある AppleとSamsungはアップデート時に､意図的に古い機種のパフォーマンスを下げていた｡ 最新の機種のパフォーマンスが上がり､古い機種のパフォーマンスを下げるようなアップデートをすれば､更新してますよと言いつつも､お客さんに新しいデバイスを購入してもらえる｡端的に言えば､演算を多く行うような処理を必須にすればいい｡後は､それを正当化するだけの口の上手さ(マーケティング戦略)と､納得させるだけの政治力(権力)があればいい｡スマホ業界は寡占されているから､それが可能なのだろう｡
これでまた､スマホが売れた後も､また定期的にスマホを購入してもらう口実ができた｡我々はお客さんだから｡
カスタムROM カスタムROMは､救世主かも知れない｡Appleは､クローズドソースなので､コミュニティが形成されないが､AndroidにはAOSPというプロジェクトがあり､そこでソースコードが公開されている｡そのため､LineageOSなどを始めとするカスタムROMのコミュニティが形成され､開発がされている｡
コミュニティベースの開発であるため､ベンダーが更新しませんよと言ってからも､プロジェクトの対応デバイスであれば､OSを更新して利用することができる｡
なぜ一部のデバイスしか対応しない? カスタムROMでさえも､対応していない機種や､対応しなくなった機種というのが存在する｡その理由としては､開発にはマンパワーが必要だからだ｡
なぜマンパワーが必要? Androidでは､個々のデバイス間の差異に個別に対応しなけれいけない｡個々のデバイス間の差異というのは､ハードウェアの違いであったり､パーティションの違いである｡
AOSPは､オープンソースのプロジェクトではあるものの､AOSPのソースコードだけではAndroidは動かない｡よりローレベルの部分(firmware､driver､SoC､kernel､vendor code)はデバイス固有であり､別の場所から用意する必要がある｡パーティションにおいても､デバイスごとに調べ､合わせる必要がある｡
つまり､OSやカーネル等をそのデバイス固有のものに個別に変更していく必要があるため､労力がかかり､結果､対応するデバイスを絞る必要がでてくる｡ここらへんは､Android特有であるため､よりLinuxベースのOSにすることで解消できる(AndroidとLinux Phoneの違い)｡
マシンパワーも必要 Androidのビルドのためには､一応要件が決まっていて､
Requirments
400GB以上のストレージ 16GB以上のRAM(推奨は64GB) その他 これに加えて､ビルドのための処理時間もかなりかかる｡それを毎回必要とする設計になっている｡
それでもファームウェアは更新されない 一応用語を整理しておくと､OSのことをROMとかファームウェアとも言うが､ファームウェアは同時にハードウェアと密接に関わるソフトウェアとして語られることもある｡ここでは､ファームウェアは､ハードウェアをインターフェイスするためのソフトウェアとして扱う｡
軽視してはならない部分がある｡カスタムROMで更新されるのはOSの部分であり､ファームウェアは更新されないという点だ｡､カスタムROMの対応デバイスであっても､ファームウェアに脆弱性が見つかったからパッチを当てて更新しましょうとはならない｡ベンダーのEOL後は､OS部分はバックポートできても､ファームウェアは扱えないはずだ｡そのため､特にセキュリティを重視するプロジェクトでは､ベンダーのEOLを目安に対応デバイスから外される(or外される基準になる)｡
なぜファームウェアの更新を引き継げないのか スマホでは､SoCという､PCでいうマザーボードみたいなところに､すべてのコンポーネントが集まっている｡基本的には､それらは､プロプライタリで､クローズドソースである｡バイナリBLOB2とも言われ､ファイル自体は存在するが､中身が何なのかよくわからないのだ｡これこそが､ベンダーが融通を押し通すことができる理由だろう｡バイナリBLOBであるがゆえに中身がわからず､更新できない｡ソースコードがわかっていれば､コミュニティでパッチを当てることもできるだろうに｡
いつの日か 今まで挙げた2つの事象から､カスタムROM含めて､Android自体に明るい未来はないように感じる｡オープンソースのモバイルOSを作るというアイデアは色々あったが(Openmoko､Maemoとか)､事実上iOSとAndroidになっている｡もちろん現状は､皆が必要とするようなcr&amp;hellip;appsは､iOSやAndroidにしかないだろう｡そして将来を語る上ではappsは重要になる｡あのWindowsでさえiOSとAndroidの牙城を崩せなかった｡appsを揃えることはユーザーにとって大きな誘引剤になる｡
よりLinuxのOSへ まず､パッケージの管理方法やビルド方法などがAndroidでは､マンパワー･マシンパワーを必要とするような設計になっているため､開発環境が限られてくる｡リソースを用意できる企業が有利になるだろう｡それにAOSPはオープンソースではあっても､Googleの影響力が大きい｡Googleが決定したことに従うか､遅れを取るかしかない｡独自の開発をするにしても､マンパワーの不足が､多くのデバイスに対応することや､セキュリティのパッチを当てることを難しくさせている｡
その影響力を離れるためには､よりLinuxらしいOSにするのが良いだろう｡お客さんをやめるには､企業ベースではなく､コミュニティベースで力を取り戻す必要がある｡
PostmarketOS Mobian Maemo Leste などのプロジェクトが動いている｡
FLOSSHという考え FLOSSといえば､Free/Libre Open Source Softwareであるが､そこにHardwareも含めて語りたいということだ｡これは理想的かも知れないが､特に持ち歩くという性質上､スマホはSensitiveだ｡スマホを長持ちさせるという意味だけでなく､プライバシー･セキュリティを重視するという意味でも､ハードウェアまで含めて考えて行くことは重要だろう｡カスタムROMが扱う範囲は､OSを中心としている｡ファームウェアのフリー化まで考えているのは､AndroidベースではReplicantくらいしか知らない｡LibremやPinephoneはそもそもオープンなコンポーネントを使うという視点でデバイスを設計している｡
クローズドソースという形で､ブラックボックス化することは､開発者とユーザー(お客さん)を二分する｡開発に貢献もできなければ､参画もできない｡人間としての創造性や活力を押さえつけられていると感じる｡特にFLOSS(H)に貢献している人々はそのように感じるのではないか｡体験は作るものではなく､作られるものになる｡そして我々は､お客さんとして作られたものを享受することしかできない｡そこに社会はない｡民主主義もない｡
ハードウェアはパテントの嵐だ｡無線関連はレギュレーションの嵐｡特にBaseband modemに関しては､必ずクローズドソースになる｡なので､FLOSSHは､決して短期的に､簡単に達せられることではないだろう｡でも､そうなる方が､特にスマホを使う人にとって良いことだと思う｡加えて､スマホを長く大事に使うことを通じて､資源の無駄遣いを減らせる｡
まとめ 今回は､スマホをなぜ買い換えなければいけないか､という視点で考えてみた｡それは､ベンダーやメーカーが決定権を持っているからだと思っている｡多くのリソースを必要とするような管理方法､ファームウェアがクローズドソースという2つがその背景にあるということだ｡その結果我々は､お客さんになることを運命づけられる｡</description></item><item><title>SMS認証はやめてくれい</title><link>https://cookiehookey.neocities.org/why-not-stop-using-sms-as-2fa/</link><pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate><guid>https://cookiehookey.neocities.org/why-not-stop-using-sms-as-2fa/</guid><description>電話回線を使う習慣がないため､いちいちSMSを受信するのが面倒くさい｡それは仕方ないとしよう｡たが､手間の割にSMSは堅牢な仕組みでもない｡YubiKeyやTOTPであれば､通信環境さえ必要ないのだけれど､なぜわざわざ脆弱性が問題視されているSMSを使うのだろうか｡
脆弱性の悪用･利用 携帯の通信には､回線交換方式とパケット交換方式があるが､脆弱性が問題視されているのは､回線交換方式である｡そのため信号線も音声回線(つまり､電話もSMS)も同じく脆弱性にさらされている｡
脆弱性が悪用･利用されているという話は､ときどき話題にはなっている｡
例えば､
中国がカリブ海諸国のネットワークを悪用して､アメリカ人の監視をしている サウジアラビアがアメリカ在住のサウジアラビア人の位置情報を取得している SS7の脆弱性が利用され､ドイツの銀行からお金が引き出された といったような話がたまにニュースになる｡
脆弱性の箇所 脆弱性があるのはSS7であるが､SS7とは､回線交換網(PSTNとか3G･LTE)で利用されている1970年代に登場したプロトコルで､電話やSMSを利用する際に用いられる｡もともとは､事業者間の閉じたネットワークを想定して利用されてきたプロトコルであるため､2000年にIPネットワークで利用できるようになってからは認証や暗号化等のセキュリティ上の問題が浮上した｡
通信事業者の登録や規制に厳しくない国で､SS7ハブを用意できれば､世界を対象にその脆弱性を利用できる｡自分で用意できなくても､闇市場ではその仕組みを利用できる権利みたいなものを取引している｡
とはいっても外国からの通信をブロックすればいいじゃないという発想もありそうだが､正規の利用方法としてのローミングも同時にできなくなる｡なら不正に利用されたものだけブロックすればいいじゃないとなるが､不正かどうかを判別する仕組みがSS7にはない｡かくして､すべてのコマンドが処理されるようになっている｡
脆弱性の利用例 プロトコル自体の脆弱性のため､攻撃のベクターは複数あるだろうが､一例を挙げてみる｡
特定の電話番号あてにSMSを送りたいですよというリクエストを発行すると､HLR(Home Location Register:携帯の加入者情報を管理するデータベース)から､以下の情報が返って来る｡
IMSI(International Mobile Subscriber Identity:加入者の識別番号で､携帯内かSIMカードに格納されている) MSC(Mobile Switching Center:現在の移動通信交換局) VLR(Visitor Location Register:加入者の位置情報の一時的データベース) このリクエストをすることで､HLRのアドレスとIMSIがわかるので､より細かいコマンドを実行できるようだ｡ 例えば､細かい位置情報を割り出すことができたり､通話の傍受､SMSを乗っ取ることもできる｡
SMSが認証に利用されてる理由 こうした脆弱性があるのに､SMSを認証として利用しているのは､なぜか｡
登録数制限(1人1個とか) 身分証明書の代わり(日本の場合､基本的に身分証明しないと携帯電話番号は使えない) 簡易的に2段階認証を実装できる(というセキュリティーシアター) アプリをインストールする必要がない､別途トークン端末を用意する必要がない 見通し 通信事業者 4G､5Gと世代を経るに連れ､より安全なプロトコルになるにしても､下位互換のために実際の解決まではまだ時間がかかるのだろう｡例えば､VoLTEの場合､電話に関してはパケット交換方式を用いるようなので､SS7の影響はなさそうだが､通話する双方がVoLTEじゃないと影響は残る｡
サービス提供者 SMS認証を廃止するつもりは当座ないだろう｡2008年より､SS7の脆弱性が指摘されてはいるものの､多くのサービスでSMSを認証方式として採用している現状は､2段階認証を否定的に受け入れているからだろう｡セキュリティを主眼においたらこの判断にはならない気がする｡通信規格がアップデートされるのを待つ方が早いかも知れない｡
2段階認証は､本来セキュリティ上の理由で採用するのだろうが､SMSだとその点が効果的ではない｡SS7の脆弱性がマイナス要素にはならなかったとしても､2段階認証だから安心だと考えるユーザーがいるならば､パスワードの強化･管理に対する意識を軽んじた結果､セキュリティ上反対の効果を生むことになる｡
まとめ 緊急時､災害時であったり､通信手段の1つとしてSMSを利用すること自体はいいのだが､それを認証に利用することは望ましくない｡根本的な解決策は､通信事業者側が対応するか､サービス提供側がSMS認証やめるか･選択肢をもたせるかしかない｡
ユーザーが対応できることは限られている｡仮にSMSを暗号化できるSilenceというアプリを用意してもC2Cのサービスだから､SMS認証ではどうしようもない｡
できることは､
SMS認証を使用するサービス自体を避けるか､他の認証方法を選ぶこと 緩和策として､ 認証のときだけ使用する番号を用意する(まだましくらい) SMS認証は当てにはせず､パスワード強化･管理､アクセスログの確認等を重視する その他､不必要にSMSへのアクセス権限を求めるアプリは使用しない 以上､SMSを2段階認証に使わないでくれいという話であった｡</description></item></channel></rss>