<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hint on CookieHookey</title><link>https://cookiehookey.v6.rocks/tags/hint/</link><description>Recent content in Hint on CookieHookey</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Sat, 22 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://cookiehookey.v6.rocks/tags/hint/index.xml" rel="self" type="application/rss+xml"/><item><title>入力の効率化</title><link>https://cookiehookey.v6.rocks/keyboard-input-methods/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://cookiehookey.v6.rocks/keyboard-input-methods/</guid><description>キーボード配列､キーバインドといったPC入力の効率化について触れようと思う｡
キーボードレイアウトを効率化 直接入力 日本ではqwertyが主流となっているが､PCになった現在ではデフォルトであるということ以外に特にメリットはないように思う｡ 入力の効率を重視したレイアウトには､dvorakを始め､colemak､workmanなど種々存在するので､自分にあったものに変えるとだいぶ楽になる｡
私の場合､qwertyからdvorakに変更することで､多少入力は速くなった｡ ただ､どちらかというと入力が楽､疲れにくいという方が実感に近い｡
日本語入力 日本語入力においては､ローマ字入力以外には､かな入力や親指シフトなどが有名どころとして挙げられる｡ かな入力はqwertyのローマ字入力と比べても､指を大きく動かす必要があるため､速度は出ても､疲れやすい｡ 親指シフトは､ローマ字入力の順打鍵に対し､同時打鍵であるため､だいぶ癖がある印象だ｡
私は､同時打鍵の新下駄配列(中指シフト)をしばらく試したことがあったが､順打鍵の方があっていると感じた｡ 単純にdvorakのローマ字入力にするだけでも､日本語入力は､楽に速くなる｡ 今では､dvorakベースのjlodを利用している｡
実現方法 windowsの場合 dvorakjというソフトがある｡
linuxの場合 guiなら､設定のキーボードレイアウトあたりから変更できると思う｡ cliの場合､setxkbmap dvorakと入力する｡
日本語入力を直接入力とは別(jlodなど)にする場合は､IME(fcitx5のmozcなど)で､ローマ字表を設定するか､インポートする｡ nlodというjlodから更に改変された配列のデータはネットにあった｡
キーバインド ここまでで､文字入力の効率化について触れた｡ 次は､キーボード操作を効率化する方法について扱う｡
入力に対して､出力を変えると楽に操作できる｡ 例えば､次のようにすると､手を移動させずにカーソル移動できる｡
無変換+s:← 無変換+d:↓ 無変換+f:→ 無変換+e:↑ さらに､SandSを設定すれば､shiftキーを小指で押さずに済む｡
space単体: space space+文字: 大文字 その他capslockをcontrolキーにしたり､vimユーザーならcaps単体をescにするなどのノウハウがある｡
キーバインドを実現する方法によってできることには制限があるが､下記のようにいろいろ組み合わせて効率化できる｡
単体のときの出力 長押しのときの出力 他のキーと複合のときの出力 実現方法 windows autohotkeyを用いる｡先程のdvorakjもautohotkeyのスクリプトだ｡ ちなみにmousegestureLは､autohotkeyをマウスにまで拡張していて､マウスのカーソル操作も効率化できる｡
linux xkeysnailやinput-remapper､kmonadなどがある｡ xmodmapやxcapeは､authotkeyに比べると機能が限定的に感じる｡ マウス操作に関しては､easystrokeがあるにはあるが､xorg関連?のエラーが出て､使えなかった｡
まとめ 直接入力､日本語入力､キーバインディングを変えることで入力を効率化について暑かった｡ その他､IMEやWindow managerのショートカット､ブラウザの拡張機能などを組み合わせるとより操作しやすくなるだろう｡</description></item><item><title>Windowsをインストールする</title><link>https://cookiehookey.v6.rocks/installing-windows/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate><guid>https://cookiehookey.v6.rocks/installing-windows/</guid><description>Linux系のOSを利用していて､Windowsのインストールメディア(USBメモリ)を作成することを想定する｡
ISOを入手する https://www.microsoft.com/software-download/ 上記サイトより､ISOを入手する｡
USBメモリにコピー linux系のOSみたいに､ddを使うことはできないようだ｡
そのため､woeusbを用いる｡
https://github.com/WoeUSB/WoeUSB#run-from-source OSのパッケージからインストールしてもいい｡ インストール後に下記コマンドを実行
sudo woeusb --device /path/to/windows-image.iso /dev/sdX これで､Windowsのインストールメディアは準備できたはずだ｡
bootloaderからインストールメディアを読み込む 起動後にメーカーのロゴが出ているときに､delete,f12,f11,f10,esc,f1,f2,f3キーあたりを連打していれば､biosやuefiの画面に入る｡ 後は､bootloaderから読み込むようにする｡
オフライン状態で､進めれば､Microsoftのアカウントを作成せずに利用できる｡
telemetryをなくす https://www.geckoandfly.com/25083/free-tools-disable-stop-windows-spying-tracking-you/ Windowsにはtelemetryがデフォルトで有効になっているおり､突発的にかなりのリソースを食うことがある｡ それを防止するためには､上記リンクにあるようなツールが有効だろう｡
プロダクトキーについて Linux系のOS等をインストールした後でも､もともとWindowsが入っていた場合は､motherboardを交換していない限り､自動で認証されるようだ｡
Windowsがインストールされた状態で､プロダクトキーを知りたい場合は､コマンドから､もしくはregeditから確認できる｡ 下記サイト参照:
https://www.techrepublic.com/article/3-simple-ways-to-find-your-windows-10-product-key/</description></item></channel></rss>